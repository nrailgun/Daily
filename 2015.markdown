# 2015

## 08.30
* http://www.cnblogs.com/nrblog/p/4770862.html

## 08.31
* Try using Hadoop
* Hadoop: The Definitive Guide ?~42, wrote some example codes

## 09.01
* tried using Eclipse to build Hadoop, failed, I hate this idea.
* Watching MOOC ML video chapter 10 & chapter 11

## 09.08
* Reading "Deep Convolutional Network Cascade for Facial Point Detection" for 3 days (2 days actually).
* Working on Caffe to solve this problem for 4+ days. It should not be too hard. however, I suck in C++ and OOP, and the Caffe code seems a little bit overcoupled.
* No, no, no. I need a new plan:
  * Read Caffe tutorials for overview.
  * Understand Caffe code more carefully.
  * Rewrite code, implement cascnn fp.

## 09.08, 9pm
* After read Caffe `Net`, `Layer`, `DataLayer`, and `LossLayer` **patiently**, I found it not so hard. I started to came up with solutions. Ok, for now.

## 09.09
* Questions:
  * Are all levels trained together, or individually? (Answer: mother fucking **individually**.)
  * Backward from average layer, or fully-connected layer?

## 09.10
* Caffe homepage tutorials. I should have read it earlier. Learned some tricks.
* Weight sharing, stride concept.
* Found the problem of failing to converge is caused by the too large learning rate! What the fuck... I already adjust it to 0.001. But unfortunately it has to be 0.0001.

## 09.11
* Checked data layer landmark & image data so carefully, no problem found.
* Caffed failed to converge even with only one sample in `CasCNN`.
* Find that Caffe failed to converge with CasCNN.proto, but converges so fast with simple inner layer. I decided to make experiments by adding layers (one by one).
* I have found the cause! It's `TanH`'s fault! `TanH`'s value **ranges from -1 to 1**, but landmark **ranges from [0, 39)**. That's why the diffs were so large!
